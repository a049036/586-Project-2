fit <- glmnet(hyperspectral,oak,family = "gaussian")
fit <- glmnet(as.matrix(hyperspectral), as.matrix(oak),family = "gaussian")
fit <- glmnet(as.matrix(hyperspectral), as.matrix(oak),family = "mgaussian")
fit
names(fit)
fit$call
predict(fit,newx = as.matrix(hyperspectral))
oak.hyperspectral.eff <- oak.hyperspectral[which(oak.hyperspectral$Whiteoak>0.1),]
var(oak.hyperspectral.eff)
lapply(1:20,function(x) plot(hyperspectral[,x], oak[,1]))
oak.hyperspectral.eff <- oak.hyperspectral[which(oak>0.1),]
oak.hyperspectral.eff
oak.eff <- oak[which(oak>0.1),]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff[,1]))
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff[,1]))
oak.eff <- oak[which(oak>0.1),]
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff[,1]))
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("Whiteoak", x, sep = ' ~ '), data = oak.hyperspectral.eff))
View(oak.hyperspectral.eff)
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
var(oak.hyperspectral.eff)
?spline
library(mgcv)
?gam
?gbdt
install.packages('gbdt')
?gbm
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 1000, interaction.depth = 3, cv.folds = 3, )
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, )
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 10, interaction.depth = 2, cv.folds = 3, )
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.2)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.02)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.9)
fit2
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.6)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.7)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.8)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.75)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.72)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.71)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.705)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.70)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 2, cv.folds = 2, bag.fraction = 0.701)
f.predict <- predict(fit2,oak.hyperspectral.eff,best.iter)
best.iter <- gbm.perf(fit2,method="OOB")
best.iter
f.predict <- predict(fit2,oak.hyperspectral.eff,best.iter)
f.predict
cbind(f.predict,oak.eff)
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 1000, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
library(gbm)
library(glmnet)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
library(gbm)
library(glmnet)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
oak <- data['Whiteoak']/data['Total']
oak <- log(oak)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
#oak <- log(oak)
oak.eff <- log(oak[which(oak>0.1),])
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
#oak <- log(oak)
oak.eff <- log(oak[which(oak>0.1),])
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
#oak <- log(oak)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
oak <- data['Whiteoak']/data['Total']
#oak <- log(oak)
oak.eff <- log(oak[which(oak>0.1),])
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak.eff))
qqline(as.matrix(oak.eff))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.901)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.101)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.001)
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.0999901)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
library(gbm)
library(glmnet)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
?gbm
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
oak.eff <- oak
#oak.eff <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
hyperspectral.eff <- hyperspectral[which(oak>0.1),]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral.eff <- cbind(oak.eff,hyperspectral.eff)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak.eff", x, sep = ' ~ '), data = oak.hyperspectral.eff))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral.eff[,x], oak.eff))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak.eff ~., data=oak.hyperspectral.eff, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral.eff,best.iter)
cbind(f.predict,oak.eff)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- log(oak)
#oak <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral <- cbind(oak,hyperspectral)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak", x, sep = ' ~ '), data = oak.hyperspectral))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral[,x], oak))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak ~., data=oak.hyperspectral, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral,best.iter)
cbind(f.predict,oak)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- log(oak+1e-5)
#oak <- oak[which(oak>0.1),]
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
oak.hyperspectral <- cbind(oak,hyperspectral)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak", x, sep = ' ~ '), data = oak.hyperspectral))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral[,x], oak))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak ~., data=oak.hyperspectral, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral,best.iter)
cbind(f.predict,oak)
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak", x, sep = ' ~ '), data = oak.hyperspectral))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral[,x], oak))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
fit2 <- gbm(oak ~., data=oak.hyperspectral, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral,best.iter)
cbind(f.predict,oak)
oak>10%
oak>0.1
logistic <- glm(oak ~.,family=binomial(link='logit'),data=oak.hyperspectral)
rm(list = ls())
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
oak <- oak > 0.1
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak", x, sep = ' ~ '), data = oak.hyperspectral))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral[,x], oak))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
logistic <- glm(oak ~.,family=binomial(link='logit'),data=oak.hyperspectral)
logistic
summary(logistic)
oak
as.numeric(oak)
oak == 1
oak == 2
oak == 1
View(oak.hyperspectral)
rm(list = ls())
data <- read.csv("Tree Species Data.csv", header = T)
# Response
oak <- data['Whiteoak']/data['Total']
oak <- oak ** (1/3)
pine <- data['Whitepine']/data['Total']
ash <- data['Ash']/data['Total']
oak <- as.numeric(oak > 0.1)
# Predictors
lidar <- data[,15:20]
hyperspectral <- data[21:length(data)]
# Data sets
oak.hyperspectral <- cbind(oak,hyperspectral)
paste(colnames(hyperspectral), collapse = '+')
lm20 <- lapply(colnames(hyperspectral), function(x) lm(paste("oak", x, sep = ' ~ '), data = oak.hyperspectral))
lapply(lm20,summary)
lapply(1:20,function(x) plot(hyperspectral[,x], oak))
qqnorm(as.matrix(oak))
qqline(as.matrix(oak))
logistic <- glm(oak ~.,family=binomial(link='logit'),data=oak.hyperspectral)
View(oak.hyperspectral)
summary(logistic)
?step
full <- glm(oak ~.,family=binomial(link='logit'),data=oak.hyperspectral)
null <- glm(oak ~1,family=binomial(link='logit'),data=oak.hyperspectral)
step(null,direction='forward')
step(null,direction='forward')
step(null,scope = c(null,full),direction='forward')
step(full,scope = c(null,full),direction='forward')
step(full,scope = c(null,full),direction='backward')
warnings()
step(full,scope = c(null,full),direction='both')
step(null,scope = c(full,null),direction='forward')
step(null,scope = list(upper=full,lower=null),direction='forward')
step(null,scope = list(upper=formula(full),lower=formula(null),direction='forward')
step(null,scope = list(upper=formula(full),lower=formula(null)),direction='forward')
warnings()
forward <- step(null,scope = list(upper=formula(full),lower=formula(null)),direction='forward')
summary(forward)
predict(forward, newdata = hyperspectral)
cbind(predict(forward, newdata = hyperspectral),oak)
full <- glm(oak ~.,family=binomial,data=oak.hyperspectral)
null <- glm(oak ~1,family=binomial,data=oak.hyperspectral)
forward <- step(null,scope = list(upper=formula(full),lower=formula(null)),direction='forward')
fit2 <- gbm(oak ~., data=oak.hyperspectral, distribution = "gaussian", n.trees = 100, interaction.depth = 3, cv.folds = 3, bag.fraction = 0.701)
best.iter <- gbm.perf(fit2,method="OOB")
f.predict <- predict(fit2,hyperspectral,best.iter)
cbind(f.predict,oak)
full <- glm(oak ~.,family=binomial,data=oak.hyperspectral)
null <- glm(oak ~1,family=binomial,data=oak.hyperspectral)
forward <- step(null,scope = list(upper=formula(full),lower=formula(null)),direction='forward')
cbind(predict(forward, newdata = hyperspectral),oak)
cbind(predict(forward, newdata = hyperspectral, type = 'response'),oak)
cbind(predict(forward, newdata = hyperspectral, type = 'response') > 0.5,oak)
?predict
cbind(p <- predict(forward, newdata = hyperspectral, type = 'response') > 0.5,oak)
p-oak
sum(p-oak)
sum(abs(p-oak))
cbind(p <- predict(full, newdata = hyperspectral, type = 'response') > 0.5,oak)
sum(p-oak)
sum(abs(p-oak))
rpart(oak ~.,data=oak.hyperspectral,method='class')
?rpart
library(rpart)
rpart(oak ~.,data=oak.hyperspectral,method='class')
tree <- rpart(oak ~.,data=oak.hyperspectral,method='class')
plot(tree)
printcp(tree)
summary(tree)
predict(tree,newdata = oak.hyperspectral)
predict(tree,newdata = oak.hyperspectral)[,1]
predict(tree,newdata = oak.hyperspectral)[,1] > 0.5
cbind(predict(tree,newdata = oak.hyperspectral)[,1],oak)
cbind(predict(tree,newdata = oak.hyperspectral)[,1] > 0.5,oak)
cbind(predict(tree,newdata = oak.hyperspectral)[,2] > 0.5,oak)
cbind(p<-predict(tree,newdata = oak.hyperspectral)[,2] > 0.5,oak)
sum(abs(p-oak))
require(randomForest)
install.packages('randomForest')
require(randomForest)
##################### Random forest
rf <- randomForest(oak~. data=oak.hyperspectral)
##################### Random forest
rf <- randomForest(oak~. data=oak.hyperspectral,subset=oak.hyperspectral)
##################### Random forest
rf=randomForest(oak~. data=oak.hyperspectral,subset=oak.hyperspectral)
##################### Random forest
rf=randomForest(oak~ ., data=oak.hyperspectral,subset=oak.hyperspectral)
##################### Random forest
rf=randomForest(oak~ ., data=oak.hyperspectral)
?randomForest
##################### Random forest
rf=randomForest(oak~ ., data=oak.hyperspectral, type = 'classification')
##################### Random forest
rf=randomForest(oak~ ., data=oak.hyperspectral, type = 'classification')
rf
factor(0,1)
factor(0,2)
factor(1,2)
factor(c(0,1))
##################### Random forest
rf=randomForest(oak~ .,y=factor(c(0,1)) data=oak.hyperspectral, type = 'classification')
##################### Random forest
rf=randomForest(oak~ .,y=c(0,1) data=oak.hyperspectral, type = 'classification')
##################### Random forest
rf=randomForest(oak~ .,y=c(0,1), data=oak.hyperspectral, type = 'classification')
##################### Random forest
rf=randomForest(oak~ .,y=factor(c(0,1)), data=oak.hyperspectral, type = 'classification')
##################### Random forest
rf=randomForest(oak~ ., data=oak.hyperspectral, type = 'classification')
summary(rf)
?factor
##################### Random forest
rf=randomForest(hyperspectral,as.factor(oak))
rf
predict(rf, newdata = hyperspectral)
cbind(predict(rf, newdata = hyperspectral),oak)
cbind(predict(rf, newdata = hyperspectral)-1,oak)
factor(oak)
as.factor(oak)
##################### Random forest
rf=randomForest(hyperspectral,as.factor(oak))
type(rf)
rf.type
rf$type
rf$predicted
cbind(rf$predicted,oak)
cbind(as.numeric(rf$predicted),oak)
cbind(as.numeric(rf$predicted)-1,oak)
cbind(p<-as.numeric(rf$predicted)-1,oak)
sum(abs(p-oak))
